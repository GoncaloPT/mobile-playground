{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: '', component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'capacitor-angular-faceid';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a class=\"navbar-brand\" href=\"#\">Poc</a>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul ngbNav #nav=\"ngbNav\" class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n      <li ngbNavItem class=\"nav-item active\">\n        <a ngbNavLink class=\"nav-link\" routerLink=\"login\">Login</a>\n        <ng-template ngbNavContent>Login</ng-template>\n      </li>\n\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import 'capacitor-secure-storage-plugin';\nimport { Component, OnInit } from '@angular/core';\nimport { FingerPrintAuth } from 'capacitor-fingerprint-auth';\nimport { Plugins } from '@capacitor/core';\n\nconst { SecureStoragePlugin } = Plugins;\nconst emailKey: string = \"EMAIL_KEY\";\nconst passwordKey: string = \"PASSWORD_KEY\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\n\nexport class LoginComponent implements OnInit {\n  constructor() {\n\n  }\n\n\n  infoMessage: string = '';\n  storedUsername: string = '';\n  storedPassword: string = '';\n  email: string = '';\n  password = '';\n  //modal control\n  loginSuccess: boolean = false;\n  loginFailedMessage: string = '';\n\n\n  /**\n   * When login button is pressed.\n   * This represents a manual login, we should store credentials in secure storage\n   */\n  onLogin() {\n    this.loginSuccess = false;\n    this.loginFailedMessage = '';\n    console.log('this.email ', this.email);\n    console.log('this.password ', this.password);\n    SecureStoragePlugin.set({ key: emailKey, value: this.email });\n    SecureStoragePlugin.set({ key: passwordKey, value: this.password });\n    this.email = '';\n    this.password = '';\n    this.infoMessage = 'Credentials stored. Please reload the page to try touchid login';\n  }\n\n  ngOnInit(): void {\n    // Do we have a stored email?\n    SecureStoragePlugin.get({ key: emailKey })\n      .then(keyValue => {\n        this.storedUsername = keyValue.value;\n        SecureStoragePlugin.get({ key: passwordKey })\n          .then((entry) => {\n            this.storedPassword = entry.value;\n            this.tryLoginWithTouchId();\n          })\n          .catch(err => {\n            console.warn(err);\n            this.loginFailedMessage = 'No password exists in storage. Please login manually';\n          });\n      }\n      )\n      .catch(err => {\n        console.warn(err);\n        this.loginFailedMessage = 'No email exists in storage. Please login manually';\n      });\n\n\n  }\n\n  async tryLoginWithTouchId(): Promise<void> {\n    let auth = new FingerPrintAuth();\n    let available = await auth.available()\n      .then(() => this.fingerPrintLogin(auth))\n      .catch((err) => {\n        console.log('warn');\n        this.loginFailedMessage = 'Touchid login is not available. Err message: ' + err;\n      });\n  }\n\n  async fingerPrintLogin(auth: FingerPrintAuth) {\n    let fingerprintAuth = await new FingerPrintAuth()\n      .verify()\n      .then(() => {\n        this.loginSuccess = true;\n\n      })\n      .catch(err => {\n        console.log(`Biometric ID NOT OK: ${JSON.stringify(err)}`);\n        this.loginFailedMessage = `Biometric ID NOT OK: ${JSON.stringify(err)}`;\n      });\n\n  }\n\n\n\n}\n","\n<div class=\"container mt-5\">\n    <ngb-alert *ngIf=\"infoMessage\" type=\"info\" (close)=\"infoMessage = ''\">{{infoMessage}}</ngb-alert>\n    <ngb-alert *ngIf=\"loginSuccess\" type=\"success\" (close)=\"loginSuccess = false\">Login success</ngb-alert>\n    <ngb-alert *ngIf=\"loginFailedMessage\" type=\"danger\" (close)=\"loginFailedMessage = ''\">{{loginFailedMessage}}</ngb-alert>\n    <div class=\"row\">\n        <div class=\"col-md-6 mx-auto\">\n            <h3>Login</h3>\n            <form (ngSubmit)=\"onLogin()\" #loginForm=\"ngForm\" class=\"mt-3\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"text\" class=\"form-control\" id=\"email\"\n                    required\n                    placeholder=\"Your Email\"\n                    [(ngModel)]=\"email\"  name=\"email\"\n                    #name=\"ngModel\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\"\n                    required\n                    placeholder=\"Your Password *\" value=\"\" \n                    [(ngModel)]=\"password\" name=\"password\"\n                    #name=\"ngModel\"\n                    >\n                </div>\n                <div class=\"form-group\">\n                    <button type=\"submit\" \n                    [disabled]=\"!loginForm.form.valid\"\n                    class=\"btn btn-success\">Login</button>\n                </div>\n               \n                \n            </form>\n            <h2>KeyChain / Secure Storage</h2>\n            <hr class=\"mt-5\"/>\n            <div class=\"form-group mt-2\">\n                <strong>Stored username is: </strong>{{storedUsername}}\n            </div>\n            <div class=\"form-group\">\n                <strong>Stored password is: </strong>{{storedPassword}}\n            </div>\n        </div>\n        \n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}